#!/bin/bash

##############################################################################
# .setup
##############################################################################
HERE="$(dirname -- "${BASH_SOURCE[0]}")"			# get current path
HERE="$( cd -- "${HERE}" &> /dev/null && pwd )"		# get current path
NAME="$(basename ${BASH_SOURCE[0]})"				# save this script name
echo "${NAME} | HERE | ${HERE}"

SEARCH_PATH=(\										# search path
	"${HERE}"\
	"${HERE}"/lib\
	"${HERE}"/..\
	"${HERE}"/../lib\
	.\
)
MODULES=(logger.include)							# modules to load
LOADED_MODULES=()									# loaded modules with path
for module in "${MODULES[@]}"						# loop through module names
do
	OK=KO											# flag
	for here in "${SEARCH_PATH[@]}"					# try every path
	do
		if . "${here}/${module}" &> /dev/null		# try to source
		then
			OK=OK									# update flag for module
			LOADED_MODULES+=("${here}/${module}")	# add complete module path
			break									# next module
		fi
	done
	
	[ "${OK}" == OK ] || {							# module not found
		echo "FATAL | ${NAME} | cannot find ${module} in:"
		for here in "${SEARCH_PATH[@]}"
		do
			echo "FATAL | ${NAME} | ${here}"
		done
		exit 255
	}
done
#
#	setup variables and log level
#
HERE="$(dirname -- "${BASH_SOURCE[0]}")"			# get current path, again
HERE="$( cd -- "${HERE}" &> /dev/null && pwd )"		# get current path, again
NAME="$(basename ${BASH_SOURCE[0]})"				# save this script name
info "HERE | $HERE"
info "NAME | $NAME"
for module in "${LOADED_MODULES[@]}"				# display loaded modules
do
	info "loaded module ${module}"
done
logger_setlevel info								# set logger level
